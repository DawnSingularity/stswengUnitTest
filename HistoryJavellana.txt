E:\stsweng\TDD with jest\unit mvc>git
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--config-env=<name>=<envvar>] <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

E:\stsweng\TDD with jest\unit mvc>git status
fatal: not a git repository (or any of the parent directories): .git

E:\stsweng\TDD with jest\unit mvc>echo "# stswengUnitTest" >> README.md

E:\stsweng\TDD with jest\unit mvc>git init
Initialized empty Git repository in E:/stsweng/TDD with jest/unit mvc/.git/

E:\stsweng\TDD with jest\unit mvc>git add README.md

E:\stsweng\TDD with jest\unit mvc>git commit -m "first commit"
[master (root-commit) 8f9b64a] first commit
 1 file changed, 24 insertions(+)
 create mode 100644 README.md

E:\stsweng\TDD with jest\unit mvc>git branch -M main

E:\stsweng\TDD with jest\unit mvc>git remote add origin https://github.com/DawnSingularity/stswengUnitTest.git

E:\stsweng\TDD with jest\unit mvc>git push -u origin main
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 962 bytes | 962.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/DawnSingularity/stswengUnitTest.git
 * [new branch]      main -> main
branch 'main' set up to track 'origin/main'.

E:\stsweng\TDD with jest\unit mvc>git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        controllers/
        index.js
        models/
        package-lock.json
        package.json
        tests/

nothing added to commit but untracked files present (use "git add" to track)

E:\stsweng\TDD with jest\unit mvc>git add -A

E:\stsweng\TDD with jest\unit mvc>git branch -M main

E:\stsweng\TDD with jest\unit mvc>git remote add origin https://github.com/DawnSingularity/stswengUnitTest.git
error: remote origin already exists.

E:\stsweng\TDD with jest\unit mvc>git push -u origin main
Everything up-to-date
branch 'main' set up to track 'origin/main'.

E:\stsweng\TDD with jest\unit mvc>git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore
        new file:   controllers/post.controller.js
        new file:   index.js
        new file:   models/connection.js
        new file:   models/post.model.js
        new file:   package-lock.json
        new file:   package.json
        new file:   tests/post.test.js


E:\stsweng\TDD with jest\unit mvc>git commit -am "Add failing test for module A"
[main 297f3b2] Add failing test for module A
 8 files changed, 6325 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 controllers/post.controller.js
 create mode 100644 index.js
 create mode 100644 models/connection.js
 create mode 100644 models/post.model.js
 create mode 100644 package-lock.json
 create mode 100644 package.json
 create mode 100644 tests/post.test.js

E:\stsweng\TDD with jest\unit mvc>git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

E:\stsweng\TDD with jest\unit mvc>git push origin main
Enumerating objects: 14, done.
Counting objects: 100% (14/14), done.
Delta compression using up to 4 threads
Compressing objects: 100% (11/11), done.
Writing objects: 100% (13/13), 56.37 KiB | 8.05 MiB/s, done.
Total 13 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/DawnSingularity/stswengUnitTest.git
   8f9b64a..297f3b2  main -> main

E:\stsweng\TDD with jest\unit mvc>git pull
Updating 297f3b2..4c8e939
Fast-forward
 tests/post.test.js | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

E:\stsweng\TDD with jest\unit mvc>npm test

> unit-mvc@1.0.0 test
> jest --color

 FAIL  tests/post.test.js
  Post controller
    create
      √ should return the created post object (6 ms)
      √ should return status 500 on server error (2 ms)
    index (get all)
      √ should return array of post or empty array (2 ms)
      × should return status 500 on server error (18 ms)

  ● Post controller › index (get all) › should return status 500 on server error

    TypeError: Attempted to wrap find which is already wrapped

      101 |
      102 |         it('should return status 500 on server error', () => {
    > 103 |             updatePostStub = sinon.stub(PostModel, 'find').yields(error);
          |                                    ^
      104 |
      105 |             PostController.index(req, res);
      106 |

      at checkWrappedMethod (node_modules/sinon/lib/sinon/util/core/wrap-method.js:64:21)
      at wrapMethod (node_modules/sinon/lib/sinon/util/core/wrap-method.js:135:13)
      at Function.stub (node_modules/sinon/lib/sinon/stub.js:123:44)
      at Sandbox.stub (node_modules/sinon/lib/sinon/sandbox.js:388:37)
      at Object.<anonymous> (tests/post.test.js:103:36)
      --------------
      Error: Stack Trace for original
      at extendObjectWithWrappedMethods (node_modules/sinon/lib/sinon/util/core/wrap-method.js:169:34)
      at wrapMethod (node_modules/sinon/lib/sinon/util/core/wrap-method.js:157:5)
      at Function.stub (node_modules/sinon/lib/sinon/stub.js:123:44)
      at Sandbox.stub (node_modules/sinon/lib/sinon/sandbox.js:388:37)
      at Object.<anonymous> (tests/post.test.js:94:36)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 3 passed, 4 total
Snapshots:   0 total
Time:        1.918 s, estimated 3 s
Ran all test suites.
Jest did not exit one second after the test run has completed.

This usually means that there are asynchronous operations that weren't stopped in your tests. Consider running Jest with `--detectOpenHandles` to troubleshoot this issue.
Terminate batch job (Y/N)? y

E:\stsweng\TDD with jest\unit mvc>npm test

> unit-mvc@1.0.0 test
> jest --color

 PASS  tests/post.test.js
  Post controller
    create
      √ should return the created post object (8 ms)
      √ should return status 500 on server error (2 ms)
    index (get all)
      √ should return array of post or empty array (3 ms)
      √ should return status 500 on server error (3 ms)

Test Suites: 1 passed, 1 total
Tests:       4 passed, 4 total
Snapshots:   0 total
Time:        2.052 s
Ran all test suites.